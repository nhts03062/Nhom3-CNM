const { io } = require("socket.io-client");
const jwt = require("jsonwebtoken");

const UserIdTestA = "67f70dd5dff3a024ca4be7ba";
const UserIdTestB = "67f70e24dff3a024ca4be7bf";
const JWT_SECRET = "your_jwt_secret_key";

const tokenA = jwt.sign({ id: UserIdTestA }, JWT_SECRET);
const tokenB = jwt.sign({ id: UserIdTestB }, JWT_SECRET);

// T·∫°o socket client B tr∆∞·ªõc ƒë·ªÉ ch·∫Øc ch·∫Øn B connect tr∆∞·ªõc
const socketB = io("http://localhost:5000", {
  auth: {
    token: tokenB,
  },
});

socketB.on("connect", () => {
  console.log("‚úÖ User B connected");

  // L·∫Øng nghe s·ª± ki·ªán nh·∫≠n l·ªùi m·ªùi k·∫øt b·∫°n
  socketB.on("friend-requested", (data) => {
    console.log("üì• B nh·∫≠n l·ªùi m·ªùi k·∫øt b·∫°n:", data);
  });

  // L·∫Øng nghe s·ª± ki·ªán h·ªßy l·ªùi m·ªùi
  socketB.on("friend-request-canceled", (data) => {
    console.log("üì§ B nh·∫≠n h·ªßy l·ªùi m·ªùi:", data);
  });

  // Sau khi B k·∫øt n·ªëi r·ªìi, m·ªõi kh·ªüi t·∫°o A
  const socketA = io("http://localhost:5000", {
    auth: {
      token: tokenA,
    },
  });

  socketA.on("connect", () => {
    console.log("‚úÖ User A connected");

    // G·ª≠i l·ªùi m·ªùi sau 1s
    setTimeout(() => {
      socketA.emit(
        "request-friend",
        { userId: UserIdTestB, text: "Hi B!" },
        (res) => {
          console.log("üü¢ A g·ª≠i l·ªùi m·ªùi callback:", res);
        }
      );
    }, 1000);

    // Sau ƒë√≥ h·ªßy l·ªùi m·ªùi sau 3s
    setTimeout(() => {
      socketA.emit(
        "cancel-request-friend",
        { userId: UserIdTestB },
        (res) => {
          console.log("üî¥ A h·ªßy l·ªùi m·ªùi callback:", res);
        }
      );
    }, 3000);
  });
});


// //B·∫Øt s·ª± ki·ªán new-chatRomm
// socketTest.on("new-chatRoom", (chatRoom) => {
//   console.log("Ng∆∞·ªùi d√πng test ƒë√£ ƒë∆∞·ª£c th√™m v√†o ph√≤ng chat", chatRoom);
// });

// //B·∫Øt s·ª± ki·ªán delete-chatRoom
// socketTest.on("delete-chatRoom", (chatRoom) => {
//   console.log(`ƒê√£ x√≥a ph√≤ng chat ${chatRoom}`);
// });

// //B·∫Øt s·ª± ki·ªán t·∫°o new-chat
// socketTest.on("new-message", (message) =>{
//   console.log('Tin nh·∫Øn t·ªõi: ', message)
// })

// //S·ª± ki·ªán thu h·ªìi t·ª´ ng∆∞·ªùi t·∫°o chat
// socketTest.on("recall",(recallMessage) =>{
//   console.log('ƒê√£ thu h·ªìi tin nh·∫Øn:', recallMessage)
// } )

// //S·ª± ki·ªán g·ª≠i l·ªùi m·ªùi k·∫øt b·∫°n
// socketTest.on("request-friend",(user) =>{
//   console.log('ƒê√£ nh·∫≠n l·ªùi m·ªùi k·∫øt b·∫°n c·ªßa user : ',user )
// } )

// //S·ª± ki·ªán h·ªßy l·ªùi m·ªùi k·∫øt b·∫°n
// socketTest.on("cancel-request-friend",(user) =>{
//   console.log('Ng∆∞·ªùi d√πng ƒë√£ h·ªßy l·ªùi m·ªùi k·∫øt b·∫°n : ',user )
// } )

// //S·ª± ki·ªán ƒë·ªìng √Ω l·ªùi m·ªùi k·∫øt b·∫°n
// socketTest.on("agree-friend",(user) =>{
//   console.log('ng∆∞·ªùi d√πng ƒë√£ ƒë·ªìng √Ω k·∫øt b·∫°n : ',user )
// } )


// socketTest.on("disconnect", () => {
//   console.log("Ng∆∞·ªùi d√πng test ƒë√£ ng·∫Øt k·∫øt n·ªëi");
// });
